import { Injectable, NgModule } from '@angular/core';

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __metadata(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
}

var AnimateScrollService = /** @class */ (function () {
    function AnimateScrollService() {
    }
    /**
    * @desc scrollToItem Fn scrolls to an items by utilising the animated scroll fn (scrollTo)
    *       and calculating the height of the header to accurately find the item's position.
    * @param elementID: element's ID that will be scrolled to.
    * @param duration: duration in milliseconds, default is 750.
    */
    AnimateScrollService.prototype.scrollToElement = function (elementID, duration) {
        if (duration === void 0) { duration = 750; }
        var item = document.getElementById(elementID); // the element
        if (item) {
            var itemPos = item.offsetTop;
            this.scrollTo(window.document, itemPos, duration);
        }
        else {
            console.error("Could not find element with the following ID: " + elementID);
        }
    };
    /**
     * @desc scrollTo Fn allows scrolling with animation.
     * @param element the 'element' that the scroll will happen on.
     * @param to is the location to scroll to.
     * @param duration is the length of the animation.
     */
    AnimateScrollService.prototype.scrollTo = function (element, to, duration) {
        var increment = 20, that = this;
        var start, remaining, currentTime = 0, animateScroll;
        if (element.body.scrollTop > 0) {
            start = element.body.scrollTop;
        }
        else if (element.documentElement.scrollTop > 0) {
            start = element.documentElement.scrollTop;
        }
        else {
            start = 0;
        }
        remaining = to - start;
        animateScroll = function () {
            currentTime += increment;
            var val = that.easeInOut(currentTime, start, remaining, duration);
            // to allow scroll function on different browsers both chrome and firefox
            top.window.scroll(0, val);
            if (currentTime < duration) {
                setTimeout(animateScroll, increment);
            }
        };
        animateScroll();
    };
    /**
     * @desc easeInOut Fn creates the values necessary to create easeInOut animation.
     * @param currentTime is current time.
     * @param startTime is the starting time.
     * @param remainingTime is the time period in the value.
     * @param duration is the duration of the animation
     * @returns a number value to scroll to.
     */
    AnimateScrollService.prototype.easeInOut = function (currentTime, startTime, remainingTime, duration) {
        currentTime /= duration / 2;
        if (currentTime < 1) {
            return remainingTime / 2 * currentTime * currentTime + startTime;
        }
        currentTime--;
        return -remainingTime / 2 * (currentTime * (currentTime - 2) - 1) + startTime;
    };
    
    AnimateScrollService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [])
    ], AnimateScrollService);
    return AnimateScrollService;
}());

var AnimateScrollModule = /** @class */ (function () {
    function AnimateScrollModule() {
    }
    AnimateScrollModule = __decorate([
        NgModule({
            imports: [],
            exports: [],
            declarations: [],
            providers: [AnimateScrollService],
        })
    ], AnimateScrollModule);
    return AnimateScrollModule;
}());

export { AnimateScrollModule, AnimateScrollService };
//# sourceMappingURL=animate-scroll.esm.js.map
